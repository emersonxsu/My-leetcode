/**
 * Given a binary tree, find the maximum path sum.

 * The path may start and end at any node in the tree.

 * For example:
 * Given the below binary tree,

       1
      / \
     2   3
 * Return 6.
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    int maxPath = INT_MIN;
public:
    int maxPathSum(TreeNode *root) {
        maxPathParent(root);
        return maxPath;
    }
    int maxPathParent(TreeNode *root) {
        if(root == nullptr) return 0;
        int left = max(maxPathParent(root->left), 0);
        int right = max(maxPathParent(root->right), 0);
        maxPath = max(left + right + root->val, maxPath);
        return max(left, right) + root->val;
    }
};
