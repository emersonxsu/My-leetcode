class Solution {
public:
    bool isNumber(string s) {
     
       bool decimalFlag = false;
       bool eFlag = false;
       
        //Delete spaces at the begining;
       int beginSpaceCount = 0;
       for (int i = 0; i < s.size() - 1; ++i) {   
           if (isspace(s[i])) {
               beginSpaceCount++;
           } else break;
       } 
       s = s.substr(beginSpaceCount);
       
       //Delete spaces at the end;
       int endSpaceCount = 0;
       for (int i = s.size() - 1; i >= 0; --i) {
           if (isspace(s[i])) {
               endSpaceCount++;
          } else break;
       }
       s = s.substr(0, s.size() - endSpaceCount);
          
       //Delete first negative sign if exsits;
       if (s[0] == '-') {
           s = s.substr(1);
       } else if(s[0] == '+') {
           s = s.substr(1);
       }
       //begin with '.' is legal as decimal
       if (s[0] == '.') {
           s = s.substr(1);
           decimalFlag = true;
       }
       //check if the rest substring is empty
       if (s.empty() || s[0] < '0' || s[0] > '9') return false;
       
       for (int i = 0; i < s.size(); ++i) {
          
           if ((s[i] < '0' || s[i] > '9') && s[i] != '.' && s[i] != 'e') {
               if ((s[i] == '+'||s[i] == '-') && s[i-1] == 'e' && i != s.size()-1 ) continue;
               return false;
           }
           //if '.' appears at the first time;
           if (decimalFlag == false && eFlag == false && s[i] == '.') {
               decimalFlag = true;
               continue;
           }
           if (decimalFlag == true && s[i] == '.') return false;
           //if 'e' appears at the first time;
           if (eFlag == false && s[i] == 'e') {
               eFlag = true;
               continue;
           }
           if (eFlag == true && (s[i] == 'e'|| s[i] == '.')  || s[s.size()-1] == 'e' ) return false;
       }
       return true;
    }
};
